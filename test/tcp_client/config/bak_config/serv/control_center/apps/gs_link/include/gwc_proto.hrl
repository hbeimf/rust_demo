%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 3.26.4

-ifndef(gwc_proto).
-define(gwc_proto, true).

-define(gwc_proto_gpb_version, "3.26.4").

-ifndef('BROADCAST_PB_H').
-define('BROADCAST_PB_H', true).
-record('Broadcast',
        {serverType             :: binary() | iolist() | undefined, % = 1
         serverID               :: binary() | iolist() | undefined, % = 2
         payload                :: binary() | undefined % = 3
        }).
-endif.

-ifndef('UIDS_PB_H').
-define('UIDS_PB_H', true).
-record('Uids',
        {uid                    :: binary() | iolist() | undefined % = 1
        }).
-endif.

-ifndef('REPORTSERVERINFO_PB_H').
-define('REPORTSERVERINFO_PB_H', true).
-record('ReportServerInfo',
        {serverType             :: binary() | iolist() | undefined, % = 1
         serverID               :: binary() | iolist() | undefined, % = 2
         serverURI              :: binary() | iolist() | undefined, % = 3
         gwcURI                 :: binary() | iolist() | undefined, % = 4
         max                    :: integer() | undefined % = 5, 32 bits
        }).
-endif.

-ifndef('NOTIFYCLOSE_PB_H').
-define('NOTIFYCLOSE_PB_H', true).
-record('NotifyClose',
        {uid                    :: binary() | iolist() | undefined % = 1
        }).
-endif.

-ifndef('HEARTBEATRES_PB_H').
-define('HEARTBEATRES_PB_H', true).
-record('HeartbeatRes',
        {
        }).
-endif.

-ifndef('TICKUSER_PB_H').
-define('TICKUSER_PB_H', true).
-record('TickUser',
        {uid                    :: binary() | iolist() | undefined % = 1
        }).
-endif.

-ifndef('HEARTBEATREQ_PB_H').
-define('HEARTBEATREQ_PB_H', true).
-record('HeartbeatReq',
        {
        }).
-endif.

-ifndef('ISONLINERES_PB_H').
-define('ISONLINERES_PB_H', true).
-record(isOnlineRes,
        {online                 :: integer() | undefined, % = 1, 32 bits
         seqID                  :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('ISPLAYINGGAMERES_PB_H').
-define('ISPLAYINGGAMERES_PB_H', true).
-record(isPlayingGameRes,
        {isPlaying              :: integer() | undefined, % = 1, 32 bits
         seqID                  :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('ISONLINEREQ_PB_H').
-define('ISONLINEREQ_PB_H', true).
-record(isOnlineReq,
        {uid                    :: binary() | iolist() | undefined, % = 1
         seqID                  :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('ISPLAYINGGAMEREQ_PB_H').
-define('ISPLAYINGGAMEREQ_PB_H', true).
-record(isPlayingGameReq,
        {uid                    :: binary() | iolist() | undefined, % = 1
         seqID                  :: binary() | iolist() | undefined % = 2
        }).
-endif.

-ifndef('BROADCASTBYUID_PB_H').
-define('BROADCASTBYUID_PB_H', true).
-record('BroadcastByUID',
        {uids = []              :: [#'Uids'{}],     % = 1
         payload                :: binary() | undefined % = 2
        }).
-endif.

-ifndef('USERADDGOLD_PB_H').
-define('USERADDGOLD_PB_H', true).
-record('UserAddGold',
        {uid                    :: binary() | iolist() | undefined, % = 1
         addGold                :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('GETONLINEUSERNUMRES_PB_H').
-define('GETONLINEUSERNUMRES_PB_H', true).
-record(getOnlineUserNumRes,
        {num                    :: integer() | undefined, % = 1, 32 bits
         serverType             :: binary() | iolist() | undefined, % = 2
         serverID               :: binary() | iolist() | undefined, % = 3
         seqID                  :: binary() | iolist() | undefined % = 4
        }).
-endif.

-ifndef('BROADCASTTOGAMESERVER_PB_H').
-define('BROADCASTTOGAMESERVER_PB_H', true).
-record('BroadcastToGameServer',
        {serverType             :: binary() | iolist() | undefined, % = 1
         serverID               :: binary() | iolist() | undefined, % = 2
         payload                :: binary() | undefined % = 3
        }).
-endif.

-ifndef('GETONLINEUSERNUMREQ_PB_H').
-define('GETONLINEUSERNUMREQ_PB_H', true).
-record(getOnlineUserNumReq,
        {serverType             :: binary() | iolist() | undefined, % = 1
         serverID               :: binary() | iolist() | undefined, % = 2
         seqID                  :: binary() | iolist() | undefined % = 3
        }).
-endif.

-ifndef('FORBIDDENIP_PB_H').
-define('FORBIDDENIP_PB_H', true).
-record(forbiddenIp,
        {type                   :: integer() | undefined, % = 1, 32 bits
         ip                     :: binary() | iolist() | undefined % = 2
        }).
-endif.

-endif.
